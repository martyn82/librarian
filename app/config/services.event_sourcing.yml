services:
  # DB
  librarian.database.events:
    class: Doctrine\MongoDB\Connection
    arguments: ["%librarian.database.events.host%:%librarian.database.events.port%"]

  librarian.client.elasticsearch:
    class: Elasticsearch\Client
    arguments: [{hosts: {host: "%librarian.database.documents.host%", port: "%librarian.database.documents.port%"}}]

  librarian.eventstore.classmap:
    class: AppBundle\EventSourcing\EventStore\EventClassMap
    arguments:
      -
        - AppBundle\Domain\Message\Event\UserCreated
        - AppBundle\Domain\Message\Event\BookAdded
        - AppBundle\Domain\Message\Event\AuthorAdded
        - AppBundle\Domain\Message\Event\BookCheckedOut
        - AppBundle\Domain\Message\Event\BookReturned

  # message buses
  librarian.commandbus:
    class: AppBundle\EventSourcing\MessageBus\CommandBus
    arguments:
      -
        AppBundle\Domain\Message\Command\CreateUser: "@librarian.commandhandler.create_user"
        AppBundle\Domain\Message\Command\AddBook: "@librarian.commandhandler.add_book"
        AppBundle\Domain\Message\Command\AddAuthor: "@librarian.commandhandler.add_author"
        AppBundle\Domain\Message\Command\CheckOutBook: "@librarian.commandhandler.checkout_book"
        AppBundle\Domain\Message\Command\ReturnBook: "@librarian.commandhandler.return_book"

  librarian.eventbus:
    class: AppBundle\EventSourcing\MessageBus\EventBus
    arguments:
      -
        AppBundle\Domain\Message\Event\UserCreated: ["@librarian.eventhandler.user_created"]
        AppBundle\Domain\Message\Event\BookAdded: ["@librarian.eventhandler.book_added"]
        AppBundle\Domain\Message\Event\AuthorAdded: ["@librarian.eventhandler.author_added"]
        AppBundle\Domain\Message\Event\BookCheckedOut: ["@librarian.eventhandler.book_checkedout"]
        AppBundle\Domain\Message\Event\BookReturned: ["@librarian.eventhandler.book_returned"]
