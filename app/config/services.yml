services:
  # DB
  librarian.database.events:
    class: Doctrine\MongoDB\Connection
    arguments: ["%librarian.database.events.address%"]

  librarian.database.events.books:
    class: Doctrine\MongoDB\Collection
    factory: ["@librarian.database.events", selectCollection]
    arguments: [events, books]

  librarian.client.elasticsearch:
    class: Elasticsearch\Client
    arguments: [{hosts: {host: "%librarian.database.read.host%", port: "%librarian.database.read.port%"}}]

  # storage
  librarian.storage.events.book.persistent:
    class: AppBundle\EventStore\Storage\MongoDbEventStorage
    arguments:
      - "@librarian.database.events.books"
      - identity

  librarian.storage.events.book.memory:
    class: AppBundle\EventStore\Storage\MemoryEventStorage

  librarian.storage.documents.book.read:
    class: AppBundle\Domain\Storage\ElasticSearchStorage
    arguments:
      - "@librarian.client.elasticsearch"
      - AppBundle\Domain\ReadModel\Book
      - books
      - book

  librarian.storage.documents.book.memory:
    class: AppBundle\Domain\Storage\MemoryStorage

  # event store
  librarian.eventstore.classmap:
    class: AppBundle\EventStore\EventClassMap
    arguments:
      -
        - AppBundle\Domain\Message\Event\BookAdded
        - AppBundle\Domain\Message\Event\AuthorAdded

  librarian.eventstore.book:
    class: AppBundle\EventStore\EventStore
    arguments:
      - "@librarian.eventbus"
      - "@librarian.storage.events.book.persistent"
      - "@jms_serializer"
      - "@librarian.eventstore.classmap"

  # aggregate repositories
  librarian.repository.books:
    class: AppBundle\Domain\Repository\Books
    arguments: ["@librarian.eventstore.book"]

  # message buses
  librarian.commandbus:
    class: AppBundle\MessageBus\CommandBus
    arguments:
      -
        AppBundle\Domain\Message\Command\AddBook: "@librarian.commandhandler.add_book.logging"
        AppBundle\Domain\Message\Command\AddAuthor: "@librarian.commandhandler.add_author.logging"

  librarian.eventbus:
    class: AppBundle\MessageBus\EventBus
    arguments:
      -
        AppBundle\Domain\Message\Event\BookAdded: ["@librarian.eventhandler.logging"]
        AppBundle\Domain\Message\Event\AuthorAdded: ["@librarian.eventhandler.logging"]

  # command/event handlers
  librarian.eventhandler.logging:
    class: AppBundle\Domain\MessageHandler\EventHandler\LoggingDecorator
    arguments: ["@logger", "@librarian.service.book"]
  
  librarian.commandhandler.add_book:
    class: AppBundle\Domain\MessageHandler\CommandHandler\AddBookHandler
    arguments: ["@librarian.repository.books"]

  librarian.commandhandler.add_book.logging:
    class: AppBundle\Domain\MessageHandler\CommandHandler\LoggingDecorator
    arguments: ["@logger", "@librarian.commandhandler.add_book"]

  librarian.commandhandler.add_author:
    class: AppBundle\Domain\MessageHandler\CommandHandler\AddAuthorHandler
    arguments: ["@librarian.repository.books"]

  librarian.commandhandler.add_author.logging:
    class: AppBundle\Domain\MessageHandler\CommandHandler\LoggingDecorator
    arguments: ["@logger", "@librarian.commandhandler.add_author"]

  # aggregate services
  librarian.service.book:
    class: AppBundle\Domain\Service\BookService
    arguments: ["@librarian.storage.documents.book.read"]
